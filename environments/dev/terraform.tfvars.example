region             = "us-west-2"
vpc_cidr_block     = "10.0.0.0/16"
environment        = "dev"
single_nat_gateway = true
ftw_api_model_outputs_bucket = "ftw-api-model-outputs"

# Custom API Domain (leave empty for no standard AWS domain)
# Example: https://abc123.execute-api.us-east-1.amazonaws.com/v1
custom_domain_name = ""

# EC2 Configuration
instance_type = "t3.micro"  # Use "g4dn.xlarge" for GPU testing
key_pair_name = ""          # Leave empty for SSM-only access

# Auto Scaling Group Configuration
asg_config = {
  min_size                  = 1
  max_size                  = 1      # Set to 3 to enable scaling
  desired_capacity          = 1
  health_check_type         = "EC2"  # Use "ELB" for ALB health checks
  health_check_grace_period = 300
}

# Example configurations for different scenarios:

# For GPU testing:
# instance_type = "g4dn.xlarge"

# For auto scaling enabled:
# asg_config = {
#   min_size                  = 1
#   max_size                  = 3
#   desired_capacity          = 2
#   health_check_type         = "ELB"
#   health_check_grace_period = 600
# }

# For SSH access (if needed):
# key_pair_name = "my-ec2-keypair"

# Cross-account S3 Access Configuration
# Enable this to allow EC2 instances to access S3 buckets in other AWS accounts
enable_cross_account_s3 = false

# List of external S3 bucket ARNs that EC2 instances need to access
# The cross-account role ARN will need to be added to these buckets' policies
cross_account_s3_bucket_arns = []

# Example for accessing Source Cooperative bucket:
# enable_cross_account_s3 = true
# cross_account_s3_bucket_arns = [
#   "arn:aws:s3:::us-west-2.opendata.source.coop",
#   "arn:aws:s3:::us-west-2.opendata.source.coop/ftw/ftw-inference-output/*"
# ]